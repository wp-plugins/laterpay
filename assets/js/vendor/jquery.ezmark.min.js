/**
 * ezMark - A simple checkbox and radio button styling plugin.
 * This plugin allows you to use a custom image for checkboxes or radio buttons. Its very simple, small and easy to use.
 *
 * This is the LaterPay fork with SVG images for checkboxes and radio buttons.
 */

(function($) {

    $.fn.ezMark = function(options) {
        options = options || {};
        var defaultOpt = {
            baseClass   : 'ez-mark',
            checkboxCls : options.checkboxCls || 'ez-checkbox',
            radioCls    : options.radioCls    || 'ez-radio',
            checkedCls  : options.checkedCls  || 'ez-checked',
            hideCls     : 'ez-hide',
            checkmark   : '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" viewBox="100 0 400 400" enable-background="new 100 0 400 400" xml:space="preserve"><g><g><g><path class="frameBack" d="M163.636 390.909c-30.073 0-54.545-24.473-54.545-54.545V63.636c0-30.073 24.473-54.545 54.545-54.545 h272.727c30.073 0 54.5 24.5 54.5 54.545v272.727c0 30.073-24.473 54.545-54.545 54.545H163.636z"/><path class="frame" d="M436.364 18.182c25.055 0 45.5 20.4 45.5 45.455v272.727c0 25.055-20.4 45.455-45.455 45.5 H163.636c-25.055 0-45.455-20.4-45.455-45.455V63.636c0-25.073 20.4-45.455 45.455-45.455H436.364 M436.364 0H163.636 C128.545 0 100 28.5 100 63.636v272.727C100 371.5 128.5 400 163.6 400h272.727C471.455 400 500 371.5 500 336.4 V63.636C500 28.5 471.5 0 436.4 0L436.364 0z"/></g></g></g><path class="check" d="M445.127 122.909l-32.564-32.564c-7.073-7.073-18.636-7.073-25.709 0L269.436 207.764L211.455 149.8 c-7.073-7.073-18.636-7.073-25.709 0l-32.564 32.564c-7.073 7.073-7.073 18.6 0 25.709L256.509 311.4 c3.545 3.5 8.2 5.3 12.9 5.291c4.673 0 9.364-1.745 12.909-5.291l162.8-162.8 C452.182 141.5 452.2 130 445.1 122.909z"/></svg>',
            radiobutton : '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 22 22" enable-background="new 0 0 22 22" xml:space="preserve"><g><g><path class="frameBack" d="M11 21.5C5.21 21.5 0.5 16.8 0.5 11S5.21 0.5 11 0.5S21.5 5.2 21.5 11S16.79 21.5 11 21.5z"/><path class="frame" d="M11 1c5.514 0 10 4.5 10 10s-4.486 10-10 10S1 16.5 1 11S5.486 1 11 1 M11 0C4.935 0 0 4.9 0 11 s4.935 11 11 11s11-4.935 11-11S17.065 0 11 0L11 0z"/></g></g><circle class="dot" cx="11" cy="11" r="5.8"/></svg>',
        };
        return this.each(function() {
            var $this       = $(this),
                titleAttr   = $this.attr('title'),
                title       = (typeof titleAttr === 'undefined' || titleAttr == '') ? '' : ' title="' + titleAttr + '"',
                inputType   = $this.attr('type'),
                inputClass  = (inputType == 'checkbox') ? defaultOpt.checkboxCls : defaultOpt.radioCls,
                image       = (inputType == 'checkbox') ? defaultOpt.checkmark   : defaultOpt.radiobutton,
                wrapTag     = '<div class="' + defaultOpt.baseClass + ' ' + inputClass + '"' + title + '>';
            $this.removeAttr('title');
            if (inputType == 'checkbox') {
                $this.addClass(defaultOpt.hideCls).wrap(wrapTag).before(image).change(function() {
                    $this.parent().toggleClass(defaultOpt.checkedCls);
                });
                if ($this.is(':checked'))
                    $this.parent().addClass(defaultOpt.checkedCls);
            } else if (inputType == 'radio') {
                $this.addClass(defaultOpt.hideCls).wrap(wrapTag).before(image).change(function() {
                    // handle all radio buttons in same group
                    $('INPUT[name="' + $this.attr('name') + '"]').each(function() {
                        if ($(this).is(':checked'))
                            $(this).parent().addClass(defaultOpt.checkedCls);
                        else
                            $(this).parent().removeClass(defaultOpt.checkedCls);
                    });
                });
                if ($this.is(':checked'))
                    $this.parent().addClass(defaultOpt.checkedCls);
            }
        });
    };

})(jQuery);
